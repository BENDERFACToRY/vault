[{"/workspaces/vault/src/lib/Player.svelte":"1","/workspaces/vault/src/lib/ipfs.ts":"2","/workspaces/vault/src/lib/table/Like.svelte":"3","/workspaces/vault/src/lib/table/Play.svelte":"4","/workspaces/vault/src/lib/table/Table.svelte":"5","/workspaces/vault/src/lib/table/Tags.svelte":"6","/workspaces/vault/src/routes/__layout.svelte":"7","/workspaces/vault/src/routes/index.svelte":"8"},{"size":1165,"mtime":1625061180850,"results":"9","hashOfConfig":"10"},{"size":77,"mtime":1625061272591,"results":"11","hashOfConfig":"10"},{"size":1096,"mtime":1625061272591,"results":"12","hashOfConfig":"10"},{"size":329,"mtime":1625061272591,"results":"13","hashOfConfig":"10"},{"size":1924,"mtime":1625061272611,"results":"14","hashOfConfig":"10"},{"size":250,"mtime":1625061180850,"results":"15","hashOfConfig":"10"},{"size":756,"mtime":1625061272591,"results":"16","hashOfConfig":"10"},{"size":1553,"mtime":1625061272591,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a4ya8u",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspaces/vault/src/lib/Player.svelte",[],"/workspaces/vault/src/lib/ipfs.ts",[],"/workspaces/vault/src/lib/table/Like.svelte",[],"/workspaces/vault/src/lib/table/Play.svelte",[],"/workspaces/vault/src/lib/table/Table.svelte",["34","35"],"/workspaces/vault/src/lib/table/Tags.svelte",[],"/workspaces/vault/src/routes/__layout.svelte",[],"/workspaces/vault/src/routes/index.svelte",["36","37"],{"ruleId":"38","severity":1,"message":"39","line":11,"column":13,"nodeType":"40","messageId":"41","endLine":11,"endColumn":16,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":39,"column":67,"nodeType":"45","messageId":"46","endLine":39,"endColumn":70},{"ruleId":"47","severity":1,"message":"48","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":40},{"ruleId":"47","severity":1,"message":"51","line":4,"column":30,"nodeType":"52","messageId":"53","endLine":4,"endColumn":39},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["54","55"],"@typescript-eslint/no-unused-vars","'cls' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed",{"messageId":"56","fix":"57","desc":"58"},{"messageId":"59","fix":"60","desc":"61"},"suggestUnknown",{"range":"62","text":"63"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"62","text":"64"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[218,221],"unknown","never"]